The system is defined by a central BehaviorSpecification that interconnects three key components: Stimulus, Sobel, and Display. The operation begins with the Stimulus node, which produces raw image data via its output port named “stim_system_out_port.” This data is transmitted to the Sobel node through the “stim_preproc_channel,” a dedicated communication link configured with a specific queue size and rendezvous semantics for synchronized delivery. Inside the Sobel node, the processing pipeline is decomposed into several distinct processes. The first process, “preproc,” receives the raw data from the Stimulus node and performs initial conditioning—such as grayscale conversion and smoothing—to prepare the image for edge detection. The output of the preproc process is then split and forwarded concurrently via two channels: “preproc_sobelH_channel” and “preproc_sobelV_channel,” which feed the “sobel_h” and “sobel_v” processes, respectively. The “sobel_h” process computes the horizontal gradient of the image, while the “sobel_v” process calculates the vertical gradient. Their outputs, containing the respective gradient information, are then merged by the “edge_merge” process through the “sobel_merge_channel,” which combines them to form the final edge magnitude image. This final processed image is output from the Sobel node via the port “system_display_out_port” and is conveyed to the Display node using the “sobel_display_channel.” The Display node, equipped with the input port “system_display_in_port,” then renders the resulting edge-detected image. Each channel and process is explicitly defined with precise message payloads and synchronization parameters, ensuring that data integrity, timing, and buffering requirements are rigorously maintained across the entire pipeline.